{"version":3,"sources":["styles.js","components/CenterCard.jsx","components/PincodeForm.jsx","components/StateListForm.jsx","App.js","index.js"],"names":["useStyles","makeStyles","theme","container","boxSizing","backgroundColor","marginTop","borderRadius","display","flexDirection","alignItems","width","containerData","padding","paddingBottom","button","margin","submitButton","select","marginBottom","label","position","form","loadingButton","divider","card","color","cardContent","justifyContent","cardTitle","fontSize","fontWeight","textShadow","CenterCard","centerData","classes","Card","className","CardContent","Typography","variant","name","address","fee_type","from","to","PincodeForm","setPincode","pincodeInput","useRef","onSubmit","e","preventDefault","pincode","current","value","length","alert","focus","TextField","inputRef","type","Button","StateListForm","setDistrictId","useState","states","setStates","loading","setLoading","currentStateId","setCurrentStateId","districts","setDistricts","useEffect","url","a","axios","get","response","data","getStates","getDistricts","CircularProgress","districtId","target","FormControl","InputLabel","id","Select","onChange","labelId","map","state","MenuItem","state_id","state_name","district","district_id","district_name","App","formType","setFormType","setCenterData","dataMethod","date","d","month","String","getMonth","day","getDate","year","getFullYear","formattedDate","Date","getData","centers","console","log","Container","onClick","p","dId","Divider","center_id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b21a5600.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    boxSizing: 'border-box',\r\n    backgroundColor: \"white\",\r\n    marginTop: \"50px\",\r\n    borderRadius: \"20px\",\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    width: '75%'\r\n  },\r\n  containerData: {\r\n    boxSizing: 'border-box',\r\n    backgroundColor: \"white\",\r\n    padding: '20px',\r\n    paddingBottom: '0px',\r\n    marginTop: \"50px\",\r\n    borderRadius: \"20px\",\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    width: '75%'\r\n  },\r\n  button: {\r\n    margin: \"20px\"\r\n  },\r\n  submitButton: {\r\n    marginTop: '20px'\r\n  },\r\n  select: {\r\n    boxSizing: 'border-box',\r\n    width: \"200px\",\r\n     marginBottom: '20px'\r\n  },\r\n  label: {\r\n    position: \"relative\",\r\n    padding: \"0px\",\r\n  },\r\n  form: {\r\n    margin: '20px',\r\n    marginTop: '0px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'stretch',\r\n  },\r\n  loadingButton: {\r\n    margin: '20px',\r\n    marginTop: '0px'\r\n  },\r\n  divider: {\r\n    backgroundColor: 'black',\r\n    // border: '2px solid black',\r\n    width: '20%',\r\n    margin: '20px'\r\n  },\r\n  card: {\r\n    color: '#fff',\r\n    width: '90%',\r\n    \r\n    backgroundColor: '#424242',\r\n    marginBottom: '20px'\r\n  },\r\n  cardContent: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-start'\r\n  },\r\n  cardTitle: {\r\n    fontSize: '20px',\r\n    fontWeight: 'bold',\r\n    textShadow: '2px 2px 2px rgba(0,0,0,0.5)'\r\n\r\n  }\r\n}));\r\n\r\nexport default useStyles;\r\n","import { Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport useStyles from \"../styles\";\r\n\r\nconst CenterCard = ({ centerData }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent className={classes.cardContent}>\r\n        <Typography variant=\"h6\">\r\n          <span>Name: </span>\r\n          {centerData.name}\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\">Address : {centerData.address}</Typography>\r\n        <Typography>Fee Type : {centerData.fee_type}</Typography>\r\n        <Typography>\r\n          Time : {centerData.from} to {centerData.to}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CenterCard;\r\n","import { Button, TextField } from \"@material-ui/core\";\r\nimport React, { useRef } from \"react\";\r\nimport useStyles from \"../styles\";\r\n\r\nconst PincodeForm = ({setPincode}) => {\r\n\r\n  const classes = useStyles();\r\n  const pincodeInput = useRef(null);\r\n\r\n  const pincodeSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    var pincode = pincodeInput.current.value;\r\n\r\n    // CHECK PINCODE IS CORRECT\r\n    if (pincode.length !== 6) {\r\n      alert(\"Please enter a valid pincode.\");\r\n      pincodeInput.current.focus();\r\n      return;\r\n    }\r\n    // END CHECK\r\n\r\n    setPincode(pincode)\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={pincodeSubmitHandler} className={classes.form}>\r\n      <TextField variant=\"outlined\" label=\"Enter Pincode\" inputRef={pincodeInput} type=\"number\" />\r\n      <Button color=\"primary\" className={classes.submitButton} variant=\"contained\" type=\"submit\">Submit</Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PincodeForm;\r\n","import { Button, CircularProgress, FormControl, InputLabel, MenuItem, Select, Typography } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport useStyles from \"../styles\";\r\n\r\nconst StateListForm = ({setDistrictId}) => {\r\n\r\n  const [states, setStates] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentStateId, setCurrentStateId] = useState();\r\n  const [districts, setDistricts] = useState();\r\n\r\n  const classes = useStyles();\r\n\r\n  const stateListSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    var districtId = e.target[2].value;\r\n    setDistrictId(districtId)\r\n  };\r\n\r\n  // useEffect for fetching State List\r\n  useEffect(() => {\r\n    const url = \"https://cdn-api.co-vin.in/api/v2/admin/location/states\";\r\n    async function getStates() {\r\n      var response = await axios.get(url);\r\n      // console.log(response.data.states);\r\n      setStates(response.data.states);\r\n      // console.log(states);\r\n      setLoading(false);\r\n    }\r\n    getStates();\r\n  }, [loading]);\r\n\r\n  // useEffect for fetching District List\r\n  useEffect(() => {\r\n    const url = `https://cdn-api.co-vin.in/api/v2/admin/location/districts/${currentStateId}`;\r\n    async function getDistricts() {\r\n      var response = await axios.get(url);\r\n      // console.log(response.data.districts)\r\n      setDistricts(response.data.districts);\r\n    }\r\n    getDistricts();\r\n  }, [currentStateId]);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <CircularProgress  className={classes.loadingButton}/>\r\n      ) : (\r\n        <>\r\n          <form className={classes.form} onSubmit={stateListSubmitHandler}>\r\n            {/* <label htmlFor=\"state\">Select State</label> */}\r\n\r\n            {/* Onchange takes a handler which sets the state_id.\r\n          Current State is another state that is init to 1 by default.\r\n          OnChange function triggers state change which is utilized by \r\n          useEffect to re-run the fetch api and get new list of districts.*/}\r\n            <FormControl className={classes.select} variant=\"outlined\">\r\n              <InputLabel id=\"select-state\">State</InputLabel>\r\n              <Select\r\n                \r\n                onChange={(e) => setCurrentStateId(e.target.value)}\r\n                label=\"State\"\r\n                labelId=\"select-state\"\r\n              >\r\n                {states.map((state) => {\r\n                  return (\r\n                    <MenuItem key={state.state_id} value={state.state_id}>\r\n                      {state.state_name}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n            {currentStateId ? (\r\n              <>\r\n              <FormControl className={classes.select} variant=\"outlined\">\r\n              <InputLabel id=\"select-district\">District</InputLabel>\r\n                <Select label=\"District\"\r\n                labelId=\"select-district\">\r\n\r\n                  {districts.map((district) => {\r\n                    return (\r\n                      <MenuItem\r\n                        key={district.district_id}\r\n                        value={district.district_id}\r\n                      >\r\n                        {district.district_name}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n                </Select></FormControl>\r\n                <Button color=\"primary\"variant=\"contained\" type=\"submit\">Submit</Button>\r\n              </>\r\n            ) : null}\r\n          </form>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StateListForm;\r\n","import { Button, Container, Divider, Typography } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport CenterCard from \"./components/CenterCard\";\r\nimport PincodeForm from \"./components/PincodeForm\";\r\nimport StateListForm from \"./components/StateListForm\";\r\nimport useStyles from \"./styles\";\r\n\r\nfunction formattedDate(d) {\r\n  let month = String(d.getMonth() + 1);\r\n  let day = String(d.getDate());\r\n  const year = String(d.getFullYear());\r\n\r\n  if (month.length < 2) month = \"0\" + month;\r\n  if (day.length < 2) day = \"0\" + day;\r\n\r\n  return `${day}-${month}-${year}`;\r\n}\r\n\r\nfunction App() {\r\n  const [formType, setFormType] = useState(\"pincode\");\r\n  const [centerData, setCenterData] = useState([]);\r\n  const [pincode, setPincode] = useState();\r\n  const [districtId, setDistrictId] = useState();\r\n  const assignPincode = (p) => {\r\n    setDistrictId(0);\r\n    setPincode(p);\r\n  };\r\n  const assignDistrictId = (dId) => {\r\n    setPincode(0);\r\n    setDistrictId(dId);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // const data = pincode ? pincode : districtId;\r\n    const dataMethod = pincode ? \"pincode\" : \"districtId\";\r\n    var date = formattedDate(new Date());\r\n    var url;\r\n    if (dataMethod === \"pincode\") {\r\n      url = `https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByPin?pincode=${pincode}&date=${date}`;\r\n      async function getData() {\r\n        var response = await axios.get(url);\r\n        setCenterData(response.data.centers);\r\n      }\r\n      getData();\r\n    } else {\r\n      url = `https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict?district_id=${districtId}&date=${date}\r\n      `\r\n      async function getData() {\r\n        var response = await axios.get(url);\r\n        setCenterData(response.data.centers);\r\n      };\r\n      getData();\r\n\r\n    }\r\n  }, [pincode, districtId]);\r\n  console.log(centerData);\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      {formType === \"pincode\" ? (\r\n        <Container className={classes.container}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            className={classes.button}\r\n            color=\"secondary\"\r\n            onClick={() => setFormType(\"state\")}\r\n          >\r\n            <Typography variant=\"caption\">Get Slots by State List</Typography>\r\n          </Button>\r\n          <PincodeForm setPincode={assignPincode} />\r\n        </Container>\r\n      ) : (\r\n        <Container className={classes.container}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            className={classes.button}\r\n            color=\"secondary\"\r\n            onClick={() => setFormType(\"pincode\")}\r\n          >\r\n            <Typography variant=\"caption\">Get Slots by Pincode</Typography>\r\n          </Button>\r\n          <StateListForm setDistrictId={assignDistrictId} />\r\n        </Container>\r\n      )}\r\n      {centerData.length ?\r\n        (<Container className={classes.containerData}>\r\n          <Typography variant=\"h6\">No Data Yet</Typography>\r\n          <Divider className={classes.divider} variant=\"fullWidth\" />\r\n\r\n          {centerData.map((data) => (\r\n            <>\r\n              <CenterCard key={data.center_id} centerData={data} />\r\n            </>\r\n          ))}\r\n        </Container>)\r\n        :\r\n        null\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}